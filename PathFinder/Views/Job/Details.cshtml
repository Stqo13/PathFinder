@using PathFinder.Data.Models.Enums;
@using static PathFinder.Common.ApplicationConstraints.JobConstraints;
@model PathFinder.ViewModels.JobViewModels.JobDetailsViewModel;

@{
    ViewData["Title"] = "Details";
}

<div id="details-main-container">
    <div id="details-inner-container">
        <div id="details-svg-btn-and-title">
            <a id="svg-back-link" href="../">
                <svg id="svg-back-btn" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z" /></svg>
            </a>

            <h2 id="details-title">@Model.Title</h2>
        </div>

        <div id="details-info-container">
            <div class="details-info-box"><strong>Начин на работа:</strong> @Model.JobType</div>
            <div class="details-info-box"><strong>Работна позиция:</strong> @Model.Position</div>
            <div class="details-info-box"><strong>Местоположение:</strong> @Model.Location</div>
            <div class="details-info-box"><strong>Заплата:</strong> @Model.Salary</div>
        </div>

        <div id="job-requirement-container">
            <div id="job-requirement-title">
                Изисквания за работа
            </div>

            <p id="job-requirement-text">
                @Model.Requirement
            </p>
        </div>

        <button id="job-apply-btn">Кандидатствай</button>

        <div id="details-description">
            <div id="details-description-title">Описание</div>
            <p id="details-description-text">
                @Model.Description
            </p>
        </div>

        <hr id="details-devider">

        @if (Model.Reviews.Count == 0)
        {
            <div id="no-reviews-container">
                <p id="no-reviews-text">Няма публикувани ревюта.</p>

                <a onclick="openReviewPopup(@Model.Id)" class="popup-link" id="add-review" method="get" asp-controller="Review" asp-action="Add" asp-route-jobId="@Model.Id">
                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="18" viewBox="0 0 32 32">
                        <path d="M 16 3 C 8.832031 3 3 8.832031 3 16 C 3 23.167969 8.832031 29 16 29 C 23.167969 29 29 23.167969 29 16 C 29 8.832031 23.167969 3 16 3 Z M 16 5 C 22.085938 5 27 9.914063 27 16 C 27 22.085938 22.085938 27 16 27 C 9.914063 27 5 22.085938 5 16 C 5 9.914063 9.914063 5 16 5 Z M 15 10 L 15 15 L 10 15 L 10 17 L 15 17 L 15 22 L 17 22 L 17 17 L 22 17 L 22 15 L 17 15 L 17 10 Z"></path>
                    </svg>

                    Ревю
                </a>
                <div id="popupModal" class="popup-overlay">
                    <div class="popup-content">
                        <span class="close-btn" onclick="closePopup()">&times;</span>
                        <div id="popupFormContainer"></div>
                    </div>
                </div>

            </div>
        }
        else
        {
            <div id="no-reviews-container">
                <h1 id="reviews-title">
                    Ревюта
                </h1>

                <a onclick="openReviewPopup(@Model.Id)" class="popup-link" id="add-review" method="get" asp-controller="Review" asp-action="Add" asp-route-jobId="@Model.Id">
                    <svg id="review-svg" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100" height="100" viewBox="0,0,256,256">
                        <g fill="none" fill-rule="nonzero" stroke="none" stroke-width="none" stroke-linecap="none" stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0" font-family="none" font-weight="none" font-size="none" text-anchor="none" style="mix-blend-mode: normal"><g transform="scale(2,2)"><path d="M64,16c-26.50967,0 -48,21.49033 -48,48c0,26.50967 21.49033,48 48,48c26.50967,0 48,-21.49033 48,-48c0,-26.50967 -21.49033,-48 -48,-48z" fill="#ffffff" stroke="none" stroke-width="1" stroke-linecap="butt"></path><path d="M64,25c-21.53911,0 -39,17.46089 -39,39c0,21.53911 17.46089,39 39,39c21.53911,0 39,-17.46089 39,-39c0,-21.53911 -17.46089,-39 -39,-39z" fill="#daa06d" stroke="none" stroke-width="1" stroke-linecap="butt"></path><path d="M64,16c-26.50967,0 -48,21.49033 -48,48c0,26.50967 21.49033,48 48,48c26.50967,0 48,-21.49033 48,-48c0,-26.50967 -21.49033,-48 -48,-48z" fill="none" stroke="#797b7e" stroke-width="6" stroke-linecap="butt"></path><path d="M64,42v44M42,64h44" fill="none" stroke="#ffffff" stroke-width="6" stroke-linecap="round"></path></g></g>
                    </svg>

                    Ревю
                </a>
                <div id="popupModal" class="popup-overlay">
                    <div class="popup-content">
                        <span class="close-btn" onclick="closePopup()">&times;</span>
                        <div id="popupFormContainer">
                            <partial name="_AddReviewPartial" model="new PathFinder.ViewModels.ReviewViewModels.ReviewAddViewModel { JobId = Model.Id, PublisherId = User.Identity.Name }" />
                        </div>
                    </div>
                </div>
            </div>


            <div id="reviews-main-container">
                @foreach (var review in Model.Reviews)
                {
                    <div class="review-box">
                        <div id="reviews-publisher-and-date">
                            <h5 id="reviews-publisher-name">@review.Publisher</h5>
                            <h6 id="reviews-publisher-reviewDate">@review.ReviewDate</h6>
                        </div>

                        <p id="reviews-publisher-comment">@review.Comment</p>
                    </div>
                }
            </div>
        }
    </div>
</div>

<script>
    function openReviewPopup(jobId) {
        event.preventDefault();
        fetch(`/Review/Add?jobId=${jobId}`)
            .then(response => response.text())
            .then(data => {
                document.getElementById("popupFormContainer").innerHTML = data;
                document.getElementById("popupModal").classList.add("show");
                attachFormSubmitHandler();
            });
    }

    function closePopup() {
        document.getElementById("popupModal").classList.remove("show");
    }

    function attachFormSubmitHandler() {
        const form = document.getElementById("reviewForm");
        form.addEventListener("submit", function (event) {
            event.preventDefault();
            const formData = new FormData(form);

            fetch('/Review/Add', {
                method: 'POST',
                body: formData
            }).then(response => {
                if (response.ok) {
                    closePopup();
                    // Optionally reload reviews without refreshing the page
                    location.reload();
                } else {
                    alert('Error submitting the review.');
                }
            });
        });
    }

    // Close popup when clicking outside of it
    window.onclick = function (event) {
        let popup = document.getElementById("popupModal");
        if (event.target === popup) {
            closePopup();
        }
    }
</script>

