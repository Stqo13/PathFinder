@model List<(string, double)> 


@{
    ViewData["Title"] = "Top 10 Most Searched Job Positions";
    var jobPositionsJson = Newtonsoft.Json.JsonConvert.SerializeObject(
        Model.Select(j => new { name = j.Item1, salary = j.Item2 })
    );
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    .chart-container {
        width: 80%;
        margin: 40px auto;
    }

    .actions {
        text-align: center;
        margin-top: 20px;
    }
</style>

<div class="chart-container">
    <h1>@ViewData["Title"]</h1>
    <canvas id="jobChart"></canvas>
</div>

<div class="actions" id="chartActions"></div>

<script>
    var jobPositions = @Html.Raw(jobPositionsJson);

    const labels = jobPositions.map(function(job) { return job.name; });
    const salaries = jobPositions.map(function(job) { return job.salary; });

    const CHART_COLORS = {
      red: 'rgb(30 164 176)',
      blue: 'rgb(135 3 67)'
    };

    function transparentize(color, opacity) {
      var rgb = color.match(/\d+/g);
      return 'rgba(' + rgb.join(',') + ',' + opacity + ')';
    }

    const data = {
      labels: labels,
      datasets: [
        {
          label: 'Average Salary',
          data: salaries,
          borderColor: CHART_COLORS.red,
          backgroundColor: transparentize(CHART_COLORS.red, 0.5),
        }
      ]
    };

    const config = {
      type: 'bar',
      data: data,
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'top',
          },
          title: {
            display: true,
            text: 'Top 10 Most Searched Job Positions'
          }
        }
      },
    };

    const ctx = document.getElementById('jobChart').getContext('2d');
    const jobChart = new Chart(ctx, config);
</script>

