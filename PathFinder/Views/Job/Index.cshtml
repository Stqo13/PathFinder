@using PathFinder.ViewModels.JobViewModels;
@model JobIndexViewModel

@{
    ViewData["Title"] = "Job Offers";
}


<div id="offers-index-main-container">
    <h2 id="offers-index-title">Job Offers</h2>

    @if (Model.JobOffers.Any())
    {
        <div id="all-offers-container">
            <form method="get" asp-controller="Job" asp-action="Index" class="mb-4">
                <div class="row justify-content-center align-items-end">
                    <div class="col-md-5">
                        <label class="form-label"><strong>Filter by Sphere:</strong></label>
                        <div class="dropdown">
                            <button class="btn btn-outline-primary dropdown-toggle w-100" type="button" id="dropdownMenuButton"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                Select Spheres
                            </button>

                            <ul class="dropdown-menu p-3" aria-labelledby="dropdownMenuButton" style="max-height: 300px; overflow-y: auto;">
                                @foreach (var sphere in Model.AvailableSpheres)
                                {
                                    <li class="form-check">
                                        <input type="checkbox" name="selectedSpheres" value="@sphere.Id"
                                               class="form-check-input" id="sphere_@sphere.Id"
                                        @(Model.SelectedSpheres.Contains(sphere.Id) ? "checked" : "") />
                                        <label class="form-check-label" for="sphere_@sphere.Id">@sphere.Name</label>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="col-md-5">
                        <label class="form-label"><strong>Search by Title:</strong></label>
                        <input type="text" name="searchKeyword" value="@Context.Request.Query["searchKeyword"]"
                               class="form-control custom-search" placeholder="Enter job title..." />
                    </div>

                    <div class="col-md-10 d-flex justify-content-center mt-3">
                        <button type="submit" class="btn btn-primary me-2">Apply Filters</button>
                        <a href="@Url.Action("Index", "Job")" class="btn btn-secondary">Clear Filters</a>
                    </div>
                </div>
            </form>
        </div>

        <div id="all-offers-container">
            @foreach (var job in Model.JobOffers)

            {
                <a asp-area="" asp-route-id="@job.Id" asp-controller="Job" asp-action="Details" class="offers-index-inner-container">
                    <div>
                        <h5 id="offers-index-name">@job.Title</h5>
                        <div id="offers-index-description">
                            <div id="offers-index-type">
                                <strong>Type:</strong> @job.JobType
                            </div>

                            <div id="offers-index-salary">
                                <strong>Salary:</strong> $@job.Salary
                            </div>
                        </div>
                    </div>
                </a>
            }
        </div>

        <div id="pagination-nav">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center" id="offers-index-pagination">
                    @if (Model.CurrentPage > 1)

                    {
                        <li class="page-item-btn">
                            <a class="page-link" asp-controller="Job" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)

                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-controller="Job" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)

                    {
                        <li class="page-item-btn">
                            <a class="page-link" asp-controller="Job" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }

    else

    {
        <p class="text-center text-muted">No job offers available at the moment.</p>
    }
</div>
